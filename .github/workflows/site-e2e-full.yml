name: 'Site E2E Full'

on:
  schedule:
    # Run nightly at 2 AM UTC (optimizes for US timezones)
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_env:
        description: 'Test environment'
        required: false
        default: 'default'
        type: choice
        options:
          - default
          - live
      browsers:
        description: 'Browser coverage'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium-only

concurrency:
  group: site-e2e-full-${{ github.ref }}
  cancel-in-progress: false  # Let full tests complete

jobs:
  full-e2e:
    name: 'Site E2E Full Suite (${{ inputs.browsers || "all" }} browsers)'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        project: ${{ github.event.inputs.browsers == 'chromium-only' && fromJSON('["chromium"]') || fromJSON('["chromium", "firefox", "webkit"]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup PNPM
        run: |
          corepack enable
          corepack use pnpm@10

      - name: Install workspace deps
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install ${{ matrix.project }} --with-deps

      - name: Run Site E2E Full Tests
        run: pnpm exec playwright test -c products/site/playwright.config.ts --project=${{ matrix.project }} --reporter=github
        env:
          CI: true
          TEST_LIVE: ${{ github.event.inputs.test_env == 'live' && '1' || '0' }}
          
      - name: Test MCP Integration (Full)
        run: |
          if [ -f "./scripts/test-mcp-integration.sh" ]; then
            echo "Testing MCP server integration for ${{ matrix.project }}..."
            ./scripts/test-mcp-integration.sh || echo "MCP integration test completed with warnings"
          else
            echo "MCP integration test script not found - skipping"
          fi

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: site-e2e-full-${{ matrix.project }}-results-${{ github.run_id }}
          path: |
            products/site/test-results/
            products/site/playwright-report/
          retention-days: 14

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: site-e2e-full-${{ matrix.project }}-report-${{ github.run_id }}
          path: products/site/playwright-report/
          retention-days: 14

  report-summary:
    name: 'Test Summary'
    runs-on: ubuntu-latest
    needs: [full-e2e]
    if: always()

    steps:
      - name: Report test summary
        env:
          TRIGGER: ${{ github.event_name }}
          BROWSERS: ${{ github.event.inputs.browsers || 'all (chromium, firefox, webkit)' }}
          TEST_ENV: ${{ github.event.inputs.test_env || 'default (placeholder mode)' }}
          RESULT_STATUS: ${{ needs.full-e2e.result }}
        run: |
          echo "## 🧪 Site E2E Full Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: $TRIGGER" >> $GITHUB_STEP_SUMMARY
          echo "- **Browsers**: $BROWSERS" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: $TEST_ENV" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: $RESULT_STATUS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "$RESULT_STATUS" != "success" ]; then
            echo "⚠️ **Action Required**: Check test artifacts and fix failing tests" >> $GITHUB_STEP_SUMMARY
            echo "📊 **Debug**: Download test artifacts from the Actions run" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **All tests passed**: Revenue funnel is stable across browsers" >> $GITHUB_STEP_SUMMARY
          fi