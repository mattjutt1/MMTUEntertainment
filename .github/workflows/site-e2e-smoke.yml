---
name: 'Site E2E Smoke'

"on":
  pull_request:
    branches: [main]
    paths:
      - 'products/site/**'
      - '.github/workflows/site-e2e-smoke.yml'
      - '!archive/**'
  workflow_dispatch:

concurrency:
  group: site-e2e-smoke-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      site_changed: ${{ steps.filter.outputs.site }}
      landing_changed: ${{ steps.filter.outputs.landing }}
      pricing_changed: ${{ steps.filter.outputs.pricing }}
      contact_changed: ${{ steps.filter.outputs.contact }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            site:
              - 'products/site/**'
              - '.github/workflows/site-e2e-smoke.yml'
              - '!archive/**'
            landing:
              - 'products/site/**/index.html'
              - 'products/site/**/home/**'
              - 'products/site/**/landing/**'
              - 'products/site/e2e/revenue-path.spec.ts'
            pricing:
              - 'products/site/**/pricing/**'
              - 'products/site/**/offer/**'
              - 'products/site/e2e/revenue-funnel.spec.ts'
            contact:
              - 'products/site/**/contact/**'
              - 'products/site/**/terms/**'
              - 'products/site/**/privacy/**'

  smoke:
    name: 'Site E2E Smoke Tests (≤3min)'
    needs: detect
    if: needs.detect.outputs.site_changed == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup PNPM
        run: |
          corepack enable
          corepack use pnpm@10

      - name: Install workspace deps
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers (chromium only)
        run: pnpm exec playwright install chromium --with-deps

      # Always run landing smoke (critical path)
      - name: Run Landing Smoke
        run: |
          pnpm exec playwright test \
            --config products/site/playwright.smoke.ts \
            --grep "@smoke.*@landing" \
            --project=chromium \
            --reporter=github,line \
            --max-failures=1
        env:
          CI: true

      # Run pricing smoke only if pricing paths changed  
      - name: Run Pricing Smoke
        if: needs.detect.outputs.pricing_changed == 'true'
        run: |
          pnpm exec playwright test \
            --config products/site/playwright.smoke.ts \
            --grep "@smoke.*@pricing" \
            --project=chromium \
            --reporter=github,line \
            --max-failures=1
        env:
          CI: true

      # Run contact smoke only if contact paths changed
      - name: Run Contact Smoke
        if: needs.detect.outputs.contact_changed == 'true'
        run: |
          pnpm exec playwright test \
            --config products/site/playwright.smoke.ts \
            --grep "@smoke.*@contact" \
            --project=chromium \
            --reporter=github,line \
            --max-failures=1
        env:
          CI: true

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: site-e2e-smoke-results-${{ github.run_id }}
          path: |
            products/site/test-results/
            products/site/playwright-report/
          retention-days: 7

      - name: Report test summary
        if: always()
        run: |
          {
            echo "## 🧪 Site E2E Micro-Smoke Results"
            echo "- **Runtime Target**: ≤3 minutes"
            echo "- **Browser**: Chromium only"
            echo "- **Modules**: Landing always + conditional pricing/contact"
            if [ "${{ job.status }}" == "success" ]; then
              echo "- **Status**: ✅ All micro-smokes passed"
            else
              echo "- **Status**: ❌ Micro-smokes failed - investigate immediately"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

  # Optional: explicit no-op job for observability on non-site PRs
  smoke-noop:
    name: 'Site E2E Smoke Tests (≤3min)'
    needs: detect
    if: needs.detect.outputs.site_changed != 'true'
    runs-on: ubuntu-latest
    steps:
      - run: echo "No site changes detected; skipping smoke tests."
