name: 'Secret Scan'
#
# CI NOTE — why this job is gated (and still safe):
# - Workflow-level "paths" skips can leave checks "Pending" and block merges.                   (GitHub)
#   https://docs.github.com/actions/managing-workflow-runs/skipping-workflow-runs
# - We gate at JOB level (`if:`) so skipped jobs report "Success/neutral".                      (GitHub)
#   https://docs.github.com/actions/using-jobs/using-conditions-to-control-job-execution
# - dorny/paths-filter detects relevant code/config changes to decide when to scan.             (GitHub Action)
#   https://github.com/dorny/paths-filter
# - Branch protection: successful/skipped/neutral are acceptable required statuses.             (GitHub)
#   https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches
# - Concurrency cancels stale runs; secret scan remains fast and targeted.                      (GitHub)
#   https://docs.github.com/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs

on:
  pull_request:
    types: [opened, synchronize, reopened]
    # No workflow-level path filters. Gate at the job level to avoid Pending checks.
  push:
    branches: [ main ]
    paths-ignore:
      - 'archive/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.filter.outputs.code }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code:
              - 'apps/**'
              - 'products/**'
              - 'packages/**'
              - 'infra/**'
              - 'scripts/**'
              - '**/*.js'
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.py'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'yarn.lock'
              - '.github/workflows/**'
              - '!archive/**'
              - '!docs/**'

  gitleaks:
    name: 'Gitleaks Security Scan'
    needs: detect
    if: needs.detect.outputs.code_changed == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .gitleaks.toml
        with:
          args: "--redact"
          
      - name: Report scan summary
        if: always()
        run: |
          {
            echo "## 🔍 Secret Scan Results"
            echo "- **Tool**: Gitleaks v8+"
            echo "- **Scope**: Git history + current changes"
            if [ "${{ job.status }}" == "success" ]; then
              echo "- **Status**: ✅ No secrets detected"
            else
              echo "- **Status**: ❌ Potential secrets found - remediate immediately"
              echo "- **Action**: Review findings and rotate any exposed credentials"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

  # Optional: explicit no-op job for observability on docs-only PRs
  scan-noop:
    needs: detect
    if: needs.detect.outputs.code_changed != 'true'
    runs-on: ubuntu-latest
    steps:
      - run: echo "No code changes detected; skipping secret scan."