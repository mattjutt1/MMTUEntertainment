name: Repository Self-Audit
#
# CI NOTE — job-level gating rationale + references:
# - Workflow-level path filters ⇒ skipped workflow ⇒ "Pending" check (blocks merge).           (GitHub)
#   https://docs.github.com/actions/managing-workflow-runs/skipping-workflow-runs
# - Job-level `if:` skip ⇒ "Success/neutral" (acceptable for required checks).                 (GitHub)
#   https://docs.github.com/actions/using-jobs/using-conditions-to-control-job-execution
# - Per-job file gating with dorny/paths-filter (monorepo friendly).                           (GitHub Action)
#   https://github.com/dorny/paths-filter
# - Branch protection accepts successful/skipped/neutral.                                      (GitHub)
#   https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches
# - We keep concurrency to cancel stale CI.                                                    (GitHub)
#   https://docs.github.com/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs

on:
  workflow_dispatch:
  push:
    branches: [main, setup/*]
  pull_request:
    types: [opened, synchronize, reopened]
    # No workflow-level path filters. Gate at the job level to avoid Pending checks.

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.filter.outputs.code }}
      workflows_changed: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code:
              - 'apps/**'
              - 'products/**'
              - 'packages/**'
              - 'infra/**'
              - 'scripts/**'
              - '**/*.js'
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.py'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'yarn.lock'
            workflows:
              - '.github/workflows/**'

  repo-audit:
    needs: detect
    if: needs.detect.outputs.code_changed == 'true' || needs.detect.outputs.workflows_changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for git log analysis
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          # jq is already available in GitHub Actions Ubuntu runners
          
      - name: Run repository audit
        run: |
          chmod +x scripts/repo_audit.mjs
          node scripts/repo_audit.mjs
          
      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: repo-audit-results
          path: |
            repo-tree.txt
            last-commits.txt
            audit-report.json
          retention-days: 30
          
      - name: Display audit summary
        run: |
          {
            echo "## Repository Audit Summary"
            echo ""
            echo "### Files:"
            echo "\`\`\`"
            head -20 repo-tree.txt
            echo "..."
            echo "\`\`\`"
            echo ""
            echo "### Audit Results:"
            echo "\`\`\`json"
            cat audit-report.json
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"
          
      - name: Fail if critical issues found
        run: |
          CRITICAL_FAILURES=$(/usr/bin/jq -r '.summary.critical_failures' audit-report.json)
          if [ "$CRITICAL_FAILURES" != "0" ]; then
            echo "❌ Critical audit failures detected: $CRITICAL_FAILURES"
            exit 1
          else
            echo "✅ Repository audit passed"
          fi

  # Optional: explicit no-op job for observability on docs-only PRs
  audit-noop:
    needs: detect
    if: needs.detect.outputs.code_changed != 'true' && needs.detect.outputs.workflows_changed != 'true'
    runs-on: ubuntu-latest
    steps:
      - run: echo "No code/workflow changes detected; skipping repo audit."