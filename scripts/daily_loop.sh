#!/usr/bin/env bash
set -euo pipefail

# Ensure marriage protection daemon is running
echo "[daily-loop] ensuring marriage protection daemon is active..."
if ! pgrep -f "marriage_protection.sh" > /dev/null; then
    ./scripts/marriage_protection.sh start || {
        echo "❌ Marriage protection daemon failed to start"
        exit 1
    }
fi

# Start timer for 20-minute cap
start=$(date +%s)
deadline=$((start+20*60))

python3 scripts/triage.py front-desk/intake.md front-desk/triage.md front-desk/log.jsonl
python3 scripts/verify_log.py front-desk/log.jsonl   # stop if chain broken
echo "[front-desk] log verified"

# Git integrity and snapshot
if command -v git &> /dev/null && [ -d .git ]; then
    echo "[front-desk] creating git snapshot..."
    git add front-desk/log.jsonl front-desk/triage.md
    git commit -m "front-desk: daily snapshot $(date -u +%Y-%m-%d)" || true
fi

# Generate daily reports
echo "[daily-loop] generating daily reports..."
TODAY=$(date +%Y-%m-%d)
DAILY_REPORT="reports/daily/$TODAY.txt"
mkdir -p "$(dirname "$DAILY_REPORT")"

cat > "$DAILY_REPORT" <<EOF
# Daily Report: $TODAY

## Marriage Protection Status
$(./scripts/marriage_protection.sh status 2>/dev/null || echo "Marriage protection not active")

## Work Session Summary
- Started: $(date -d "@$start" "+%Y-%m-%d %H:%M:%S")
- Duration: $(($(date +%s) - start)) seconds
- Tasks triaged: $(tail -10 front-desk/log.jsonl | grep -c "triage" || echo "0")

## Triage Queue Status
$(tail -5 front-desk/triage.md | grep "| T-" | wc -l) open items in triage queue

## Next Actions
- Review marriage protection limits before continuing work
- Process highest priority triage items
- Schedule 2-hour check-in if in active work session

---
Generated by daily_loop.sh on $TODAY
EOF

# Check if it's Sunday and generate weekly report
if [ "$(date +%u)" = "7" ]; then
    echo "[daily-loop] Sunday detected, generating weekly report..."
    WEEK=$(date +%Y-W%V)
    python3 scripts/make_weekly_report.py > "reports/weekly/$WEEK.md"
    echo "✅ Weekly report generated: reports/weekly/$WEEK.md"
fi

now=$(date +%s); left=$((deadline-now))
[ $left -lt 0 ] && left=0
echo "Close-out: choose ONE item to do now (<= $left sec)."
echo "✅ Daily report saved: $DAILY_REPORT"