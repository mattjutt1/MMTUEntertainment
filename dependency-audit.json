(node:781877) [DEP0169] DeprecationWarning: `url.parse()` behavior is not standardized and prone to errors that have security implications. Use the WHATWG URL API instead. CVEs are not issued for `url.parse()` vulnerabilities.
(Use `node --trace-deprecation ...` to show where the warning was created)
{
  "actions": [
    {
      "action": "update",
      "resolves": [
        {
          "id": 1101610,
          "path": "apps__marketing>@cloudflare/next-on-pages>vercel>@vercel/node>undici",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102341,
          "path": "apps__marketing>@cloudflare/next-on-pages>vercel>@vercel/node>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1104501,
          "path": "apps__marketing>@cloudflare/next-on-pages>vercel>@vercel/node>undici",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ],
      "module": null,
      "target": null,
      "depth": 3
    },
    {
      "action": "review",
      "module": "@octokit/request-error",
      "resolves": [
        {
          "id": 1102256,
          "path": "apps__probot-app>probot>@octokit/core>@octokit/request-error",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102256,
          "path": "apps__probot-app>probot>octokit-auth-probot>@octokit/auth-app>@octokit/request-error",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "esbuild",
      "resolves": [
        {
          "id": 1102341,
          "path": "apps__comparison-matrix>vite>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102341,
          "path": "apps__memeMixer-lite>wrangler>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102341,
          "path": "apps__portfolio-dashboard>vite>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102341,
          "path": "apps__marketing>@cloudflare/next-on-pages>esbuild",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "@octokit/request",
      "resolves": [
        {
          "id": 1102896,
          "path": "apps__probot-app>probot>@octokit/core>@octokit/request",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1102896,
          "path": "apps__probot-app>probot>octokit-auth-probot>@octokit/auth-app>@octokit/request",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "@octokit/plugin-paginate-rest",
      "resolves": [
        {
          "id": 1102898,
          "path": "apps__probot-app>probot>@octokit/plugin-paginate-rest",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "cookie",
      "resolves": [
        {
          "id": 1103907,
          "path": "apps__marketing>@cloudflare/next-on-pages>cookie",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    }
  ],
  "advisories": {
    "1101610": {
      "findings": [
        {
          "version": "5.28.4",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/nodejs/undici/security/advisories/GHSA-c76h-2ccp-4975\n- https://nvd.nist.gov/vuln/detail/CVE-2025-22150\n- https://github.com/nodejs/undici/commit/711e20772764c29f6622ddc937c63b6eefdf07d0\n- https://github.com/nodejs/undici/commit/c2d78cd19fe4f4c621424491e26ce299e65e934a\n- https://github.com/nodejs/undici/commit/c3acc6050b781b827d80c86cbbab34f14458d385\n- https://hackerone.com/reports/2913312\n- https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f\n- https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113\n- https://github.com/advisories/GHSA-c76h-2ccp-4975",
      "created": "2025-01-21T21:10:47.000Z",
      "id": 1101610,
      "npm_advisory_id": null,
      "overview": "### Impact\n\n[Undici `fetch()` uses Math.random()](https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113) to choose the boundary for a multipart/form-data request. It is known that the output of Math.random() can be predicted if several of its generated values are known.\n\nIf there is a mechanism in an app that sends multipart requests to an attacker-controlled website, they can use this to leak the necessary values. Therefore, An attacker can tamper with the requests going to the backend APIs if certain conditions are met.\n\n### Patches\n\nThis is fixed in 5.28.5; 6.21.1; 7.2.3.\n\n### Workarounds\n\nDo not issue multipart requests to attacker controlled servers.\n\n### References\n\n* https://hackerone.com/reports/2913312\n* https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f\n",
      "reported_by": null,
      "title": "Use of Insufficiently Random Values in undici",
      "metadata": null,
      "cves": [
        "CVE-2025-22150"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "undici",
      "vulnerable_versions": ">=4.5.0 <5.28.5",
      "github_advisory_id": "GHSA-c76h-2ccp-4975",
      "recommendation": "Upgrade to version 5.28.5 or later",
      "patched_versions": ">=5.28.5",
      "updated": "2025-01-22T08:01:28.000Z",
      "cvss": {
        "score": 6.8,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N"
      },
      "cwe": [
        "CWE-330"
      ],
      "url": "https://github.com/advisories/GHSA-c76h-2ccp-4975"
    },
    "1102256": {
      "findings": [
        {
          "version": "2.1.0",
          "paths": []
        },
        {
          "version": "3.0.3",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/octokit/request-error.js/security/advisories/GHSA-xx4v-prfh-6cgc\n- https://github.com/octokit/request-error.js/commit/d558320874a4bc8d356babf1079e6f0056a59b9e\n- https://nvd.nist.gov/vuln/detail/CVE-2025-25289\n- https://github.com/octokit/request-error.js/blob/main/src/index.ts\n- https://github.com/advisories/GHSA-xx4v-prfh-6cgc",
      "created": "2025-02-14T17:58:54.000Z",
      "id": 1102256,
      "npm_advisory_id": null,
      "overview": "### Summary\nA Regular Expression Denial of Service (ReDoS) vulnerability exists in the processing of HTTP request headers. By sending an authorization header containing an excessively long sequence of spaces followed by a newline and \"@\", an attacker can exploit inefficient regular expression processing, leading to excessive resource consumption. This can significantly degrade server performance or cause a denial-of-service (DoS) condition, impacting availability.\n### Details\nThe issue occurs at [line 52](https://github.com/octokit/request-error.js/blob/main/src/index.ts) of iterator.ts in the @octokit/request-error repository.\nThe vulnerability is caused by the use of an inefficient regular expression in the handling of the `authorization` header within the request processing logic:\n```js\nauthorization: options.request.headers.authorization.replace(\n  / .*$/, \n  \" [REDACTED]\"\n)\n```\nThe regular expression `/ .*$/` matches a space followed by any number of characters until the end of the line. This pattern is vulnerable to Regular Expression Denial of Service (ReDoS) when processing specially crafted input. Specifically, an attacker can send an `authorization` header containing a long sequence of spaces followed by a newline and \"@\", such as:\n```js\nheaders: {\n  authorization: \"\" + \" \".repeat(100000) + \"\\n@\",\n}\n```\nDue to the way JavaScript's regular expression engine backtracks while attempting to match the space followed by arbitrary characters, this input can cause excessive CPU usage, significantly slowing down or even freezing the server. This leads to a denial-of-service condition, impacting availability.\n### PoC\n[The gist of PoC.js](https://gist.github.com/ShiyuBanzhou/e1203ad22701fd043b8501eb37676a0d)\n1. run npm i @octokit/request-error\n2. run 'node poc.js'\nresult:\n3. then the program will stuck forever with high CPU usage\n```js\nimport { RequestError } from \"@octokit/request-error\";\n\nconst error = new RequestError(\"Oops\", 500, {\n  request: {\n    method: \"POST\",\n    url: \"https://api.github.com/foo\",\n    body: {\n      bar: \"baz\",\n    },\n    headers: {\n      authorization: \"\"+\" \".repeat(100000)+\"\\n@\",\n    },\n  },\n  response: {\n    status: 500,\n    url: \"https://api.github.com/foo\",\n    headers: {\n      \"x-github-request-id\": \"1:2:3:4\",\n    },\n    data: {\n      foo: \"bar\",\n    },\n  },\n});\n```\n\n### Impact\n#### Vulnerability Type & Impact:\nThis is a `Regular Expression Denial of Service (ReDoS) vulnerability`, which occurs due to an inefficient regular expression (`/ .*$/`) used to sanitize the `authorization` header. An attacker can craft a malicious input that triggers excessive backtracking in the regex engine, leading to high CPU consumption and potential denial-of-service (DoS).\n#### Who is Impacted?\n* Projects or services using this code to process HTTP headers are vulnerable.\n* Applications that rely on user-supplied `authorization` headers are at risk, especially those processing a large volume of authentication requests.\n* Multi-tenant or API-driven platforms could experience degraded performance or service outages if exploited at scale.",
      "reported_by": null,
      "title": "@octokit/request-error has a Regular Expression in index that Leads to ReDoS Vulnerability Due to Catastrophic Backtracking",
      "metadata": null,
      "cves": [
        "CVE-2025-25289"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "@octokit/request-error",
      "vulnerable_versions": ">=1.0.0 <5.1.1",
      "github_advisory_id": "GHSA-xx4v-prfh-6cgc",
      "recommendation": "Upgrade to version 5.1.1 or later",
      "patched_versions": ">=5.1.1",
      "updated": "2025-02-14T23:07:30.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-xx4v-prfh-6cgc"
    },
    "1102341": {
      "findings": [
        {
          "version": "0.21.5",
          "paths": []
        },
        {
          "version": "0.17.19",
          "paths": []
        },
        {
          "version": "0.18.20",
          "paths": []
        },
        {
          "version": "0.15.18",
          "paths": []
        },
        {
          "version": "0.14.47",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/evanw/esbuild/security/advisories/GHSA-67mh-4wv8-2f99\n- https://github.com/evanw/esbuild/commit/de85afd65edec9ebc44a11e245fd9e9a2e99760d\n- https://github.com/advisories/GHSA-67mh-4wv8-2f99",
      "created": "2025-02-10T17:48:07.000Z",
      "id": 1102341,
      "npm_advisory_id": null,
      "overview": "### Summary\n\nesbuild allows any websites to send any request to the development server and read the response due to default CORS settings.\n\n### Details\n\nesbuild sets `Access-Control-Allow-Origin: *` header to all requests, including the SSE connection, which allows any websites to send any request to the development server and read the response.\n\nhttps://github.com/evanw/esbuild/blob/df815ac27b84f8b34374c9182a93c94718f8a630/pkg/api/serve_other.go#L121\nhttps://github.com/evanw/esbuild/blob/df815ac27b84f8b34374c9182a93c94718f8a630/pkg/api/serve_other.go#L363\n\n**Attack scenario**:\n\n1. The attacker serves a malicious web page (`http://malicious.example.com`).\n1. The user accesses the malicious web page.\n1. The attacker sends a `fetch('http://127.0.0.1:8000/main.js')` request by JS in that malicious web page. This request is normally blocked by same-origin policy, but that's not the case for the reasons above.\n1. The attacker gets the content of `http://127.0.0.1:8000/main.js`.\n\nIn this scenario, I assumed that the attacker knows the URL of the bundle output file name. But the attacker can also get that information by\n\n- Fetching `/index.html`: normally you have a script tag here\n- Fetching `/assets`: it's common to have a `assets` directory when you have JS files and CSS files in a different directory and the directory listing feature tells the attacker the list of files\n- Connecting `/esbuild` SSE endpoint: the SSE endpoint sends the URL path of the changed files when the file is changed (`new EventSource('/esbuild').addEventListener('change', e => console.log(e.type, e.data))`)\n- Fetching URLs in the known file: once the attacker knows one file, the attacker can know the URLs imported from that file\n\nThe scenario above fetches the compiled content, but if the victim has the source map option enabled, the attacker can also get the non-compiled content by fetching the source map file.\n\n### PoC\n\n1. Download [reproduction.zip](https://github.com/user-attachments/files/18561484/reproduction.zip)\n2. Extract it and move to that directory\n1. Run `npm i`\n1. Run `npm run watch`\n1. Run `fetch('http://127.0.0.1:8000/app.js').then(r => r.text()).then(content => console.log(content))` in a different website's dev tools.\n\n![image](https://github.com/user-attachments/assets/08fc2e4d-e1ec-44ca-b0ea-78a73c3c40e9)\n\n### Impact\n\nUsers using the serve feature may get the source code stolen by malicious websites.",
      "reported_by": null,
      "title": "esbuild enables any website to send any requests to the development server and read the response",
      "metadata": null,
      "cves": [],
      "access": "public",
      "severity": "moderate",
      "module_name": "esbuild",
      "vulnerable_versions": "<=0.24.2",
      "github_advisory_id": "GHSA-67mh-4wv8-2f99",
      "recommendation": "Upgrade to version 0.25.0 or later",
      "patched_versions": ">=0.25.0",
      "updated": "2025-02-10T17:48:08.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "cwe": [
        "CWE-346"
      ],
      "url": "https://github.com/advisories/GHSA-67mh-4wv8-2f99"
    },
    "1102896": {
      "findings": [
        {
          "version": "5.6.3",
          "paths": []
        },
        {
          "version": "6.2.8",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/octokit/request.js/security/advisories/GHSA-rmvr-2pp2-xj38\n- https://github.com/octokit/request.js/commit/34ff07ee86fc5c20865982d77391bc910ef19c68\n- https://nvd.nist.gov/vuln/detail/CVE-2025-25290\n- https://github.com/octokit/request.js/releases/tag/v8.4.1\n- https://github.com/advisories/GHSA-rmvr-2pp2-xj38",
      "created": "2025-02-14T18:00:18.000Z",
      "id": 1102896,
      "npm_advisory_id": null,
      "overview": "### Summary\nThe regular expression `/<([^>]+)>; rel=\"deprecation\"/` used to match the `link` header in HTTP responses is vulnerable to a ReDoS (Regular Expression Denial of Service) attack. This vulnerability arises due to the unbounded nature of the regex's matching behavior, which can lead to catastrophic backtracking when processing specially crafted input. An attacker could exploit this flaw by sending a malicious `link` header, resulting in excessive CPU usage and potentially causing the server to become unresponsive, impacting service availability.\n### Details\nThe vulnerability resides in the regular expression `/<([^>]+)>; rel=\"deprecation\"/`, which is used to match the `link` header in HTTP responses. This regular expression captures content between angle brackets (`<>`) followed by `; rel=\"deprecation\"`. However, the pattern is vulnerable to ReDoS (Regular Expression Denial of Service) attacks due to its susceptibility to catastrophic backtracking when processing malicious input.\nAn attacker can exploit this vulnerability by sending a specially crafted `link` header designed to trigger excessive backtracking. For example, the following headers:\n```js\nfakeHeaders.set(\"link\", \"<\".repeat(100000) + \">\");\nfakeHeaders.set(\"deprecation\", \"true\");\n```\nThe crafted `link` header consists of 100,000 consecutive `<` characters followed by a closing `>`. This input forces the regular expression engine to backtrack extensively in an attempt to match the pattern. As a result, the server can experience a significant increase in CPU usage, which may lead to denial of service, making the server unresponsive or even causing it to crash under load.\nThe issue is present in the following code:\n```js\nconst matches = responseHeaders.link && responseHeaders.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n```\nIn this scenario, the `link` header value triggers the regex to perform excessive backtracking, resulting in resource exhaustion and potentially causing the service to become unavailable.\n\n### PoC\n[The gist of PoC.js](https://gist.github.com/ShiyuBanzhou/2afdabf0fc4cb6cfbd3b1d58b6082f6a)\n1. run npm i @octokit/request\n2. run 'node poc.js'\nresult:\n3. then the program will stuck forever with high CPU usage\n```js\nimport { request } from \"@octokit/request\";\nconst originalFetch = globalThis.fetch;\nglobalThis.fetch = async (url, options) => {\n  const response = await originalFetch(url, options);\n  const fakeHeaders = new Headers(response.headers);\n  fakeHeaders.set(\"link\", \"<\".repeat(100000) + \">\");\n  fakeHeaders.set(\"deprecation\", \"true\");\n  return new Response(response.body, {\n    status: response.status,\n    statusText: response.statusText,\n    headers: fakeHeaders\n  });\n};\nrequest(\"GET /repos/octocat/hello-world\")\n  .then(response => {\n    // console.log(\"[+] Response received:\", response);\n  })\n  .catch(error => {\n    // console.error(\"[-] Error:\", error);\n  });\n// globalThis.fetch = originalFetch;\n```\n### Impact\nThis is a *Denial of Service (DoS) vulnerability* caused by a *ReDoS (Regular Expression Denial of Service)* flaw. The vulnerability allows an attacker to craft a malicious `link` header that exploits the inefficient backtracking behavior of the regular expression used in the code.\nThe primary impact is the potential for *server resource exhaustion*, specifically high CPU usage, which can cause the server to become unresponsive or even crash when processing the malicious request. This affects the availability of the service, leading to downtime or degraded performance.\nThe vulnerability impacts any system that uses this specific regular expression to process `link` headers in HTTP responses. This can include:\n* Web applications or APIs that rely on parsing headers for deprecation information.\n* Users interacting with the affected service, as they may experience delays or outages if the server becomes overwhelmed.\n* Service providers who may face disruption in operations or performance degradation due to this flaw.\nIf left unpatched, the vulnerability can be exploited by any unauthenticated user who is able to send a specially crafted HTTP request with a malicious `link` header, making it a low-barrier attack that could be exploited by anyone.",
      "reported_by": null,
      "title": "@octokit/request has a Regular Expression in fetchWrapper that Leads to ReDoS Vulnerability Due to Catastrophic Backtracking",
      "metadata": null,
      "cves": [
        "CVE-2025-25290"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "@octokit/request",
      "vulnerable_versions": ">=1.0.0 <8.4.1",
      "github_advisory_id": "GHSA-rmvr-2pp2-xj38",
      "recommendation": "Upgrade to version 8.4.1 or later",
      "patched_versions": ">=8.4.1",
      "updated": "2025-02-18T19:17:42.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-rmvr-2pp2-xj38"
    },
    "1102898": {
      "findings": [
        {
          "version": "2.21.3",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/octokit/plugin-paginate-rest.js/security/advisories/GHSA-h5c3-5r3r-rr8q\n- https://github.com/octokit/plugin-paginate-rest.js/commit/bb6c4f945d8023902cf387391d2b2209261044ab\n- https://nvd.nist.gov/vuln/detail/CVE-2025-25288\n- https://github.com/octokit/plugin-paginate-rest.js/blob/main/src/iterator.ts\n- https://github.com/octokit/plugin-paginate-rest.js/releases/tag/v9.2.2\n- https://github.com/advisories/GHSA-h5c3-5r3r-rr8q",
      "created": "2025-02-14T17:57:59.000Z",
      "id": 1102898,
      "npm_advisory_id": null,
      "overview": "### Summary\nFor the npm package `@octokit/plugin-paginate-rest`, when calling `octokit.paginate.iterator()`, a specially crafted `octokit` instance—particularly with a malicious `link` parameter in the `headers` section of the `request`—can trigger a ReDoS attack.\n\n### Details\nThe issue occurs at [line 39](https://github.com/octokit/plugin-paginate-rest.js/blob/main/src/iterator.ts) of iterator.ts in the @octokit/plugin-paginate-rest repository. The relevant code is as follows:\n```js\nurl = ((normalizedResponse.headers.link || \"\").match(\n  /<([^>]+)>;\\s*rel=\"next\"/,\n) || [])[1];\n```\nThe regular expression `/<([^>]+)>;\\s*rel=\"next\"/` may lead to a potential backtracking vulnerability, resulting in a ReDoS (Regular Expression Denial of Service) attack. This could cause high CPU utilization and even service slowdowns or freezes when processing specially crafted `Link` headers.\n\n### PoC\n[The gist of PoC.js](https://gist.github.com/ShiyuBanzhou/d3f2ad000be8384d2105c87c2ed7ce7d)\n1. run npm i @octokit/plugin-paginate-rest\n2. run 'node poc.js'\nresult:\n3. then the program will stuck forever with high CPU usage\n```js\nimport { Octokit } from \"@octokit/core\";\nimport { paginateRest } from \"@octokit/plugin-paginate-rest\";\n\nconst MyOctokit = Octokit.plugin(paginateRest);\nconst octokit = new MyOctokit({\n  auth: \"your-github-token\",\n});\n\n// Intercept the request to inject a malicious 'link' header for ReDoS\noctokit.hook.wrap(\"request\", async (request, options) => {\n  const maliciousLinkHeader = \"\" + \"<\".repeat(100000) + \">\"; // attack string\n  return {\n    data: [],\n    headers: {\n      link: maliciousLinkHeader, // Inject malicious 'link' header\n    },\n  };\n});\n\n// Trigger the ReDoS attack by paginating through GitHub issues\n(async () => {\n  try {\n    for await (const normalizedResponse of octokit.paginate.iterator(\n      \"GET /repos/{owner}/{repo}/issues\", { owner: \"DayShift\", repo: \"ReDos\", per_page: 100 }\n    )) {\n      console.log({ normalizedResponse });\n    }\n  } catch (error) {\n    console.error(\"Error encountered:\", error);\n  }\n})();\n```\n![image](https://github.com/user-attachments/assets/619c030e-5473-4a26-9e2a-4b9a26c1563b)\n\n### Impact\n#### What kind of vulnerability is it?\nThis is a *Regular Expression Denial of Service (ReDoS) vulnerability*, which occurs due to excessive backtracking in the regex pattern:\n```js\n/<([^>]+)>;\\s*rel=\"next\"/\n```\nWhen processing a specially crafted `Link` header, this regex can cause significant performance degradation, leading to high CPU utilization and potential service unresponsiveness.\n#### Who is impacted?\n* Users of `@octokit/plugin-paginate-rest` who call `octokit.paginate.iterator()` and process untrusted or manipulated `Link` headers.\n* Applications relying on Octokit's pagination mechanism, particularly those handling large volumes of API requests.\n* GitHub API consumers who integrate this package into their projects for paginated data retrieval.",
      "reported_by": null,
      "title": "@octokit/plugin-paginate-rest has a Regular Expression in iterator Leads to ReDoS Vulnerability Due to Catastrophic Backtracking",
      "metadata": null,
      "cves": [
        "CVE-2025-25288"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "@octokit/plugin-paginate-rest",
      "vulnerable_versions": ">=1.0.0 <9.2.2",
      "github_advisory_id": "GHSA-h5c3-5r3r-rr8q",
      "recommendation": "Upgrade to version 9.2.2 or later",
      "patched_versions": ">=9.2.2",
      "updated": "2025-02-18T19:15:06.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-1333"
      ],
      "url": "https://github.com/advisories/GHSA-h5c3-5r3r-rr8q"
    },
    "1103907": {
      "findings": [
        {
          "version": "0.5.0",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x\n- https://github.com/jshttp/cookie/pull/167\n- https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c\n- https://github.com/advisories/GHSA-pxg6-pf52-xh8x",
      "created": "2024-10-04T20:31:00.000Z",
      "id": 1103907,
      "npm_advisory_id": null,
      "overview": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a\", value)` would result in `\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a=test\"`, setting `userName` cookie to `<script>` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
      "reported_by": null,
      "title": "cookie accepts cookie name, path, and domain with out of bounds characters",
      "metadata": null,
      "cves": [
        "CVE-2024-47764"
      ],
      "access": "public",
      "severity": "low",
      "module_name": "cookie",
      "vulnerable_versions": "<0.7.0",
      "github_advisory_id": "GHSA-pxg6-pf52-xh8x",
      "recommendation": "Upgrade to version 0.7.0 or later",
      "patched_versions": ">=0.7.0",
      "updated": "2025-04-15T13:56:44.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-74"
      ],
      "url": "https://github.com/advisories/GHSA-pxg6-pf52-xh8x"
    },
    "1104501": {
      "findings": [
        {
          "version": "5.28.4",
          "paths": []
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/nodejs/undici/security/advisories/GHSA-cxrh-j4jr-qwg3\n- https://github.com/nodejs/undici/issues/3895\n- https://github.com/nodejs/undici/pull/4088\n- https://nvd.nist.gov/vuln/detail/CVE-2025-47279\n- https://github.com/advisories/GHSA-cxrh-j4jr-qwg3",
      "created": "2025-05-15T14:15:06.000Z",
      "id": 1104501,
      "npm_advisory_id": null,
      "overview": "### Impact\n\nApplications that use undici to implement a webhook-like system are vulnerable. If the attacker set up a server with an invalid certificate, and they can force the application to call the webhook repeatedly, then they can cause a memory leak. \n\n### Patches\n\nThis has been patched in https://github.com/nodejs/undici/pull/4088.\n\n### Workarounds\n\nIf a webhook fails, avoid keep calling it repeatedly.\n\n### References\n\nReported as: https://github.com/nodejs/undici/issues/3895",
      "reported_by": null,
      "title": "undici Denial of Service attack via bad certificate data",
      "metadata": null,
      "cves": [
        "CVE-2025-47279"
      ],
      "access": "public",
      "severity": "low",
      "module_name": "undici",
      "vulnerable_versions": "<5.29.0",
      "github_advisory_id": "GHSA-cxrh-j4jr-qwg3",
      "recommendation": "Upgrade to version 5.29.0 or later",
      "patched_versions": ">=5.29.0",
      "updated": "2025-05-16T02:07:01.000Z",
      "cvss": {
        "score": 3.1,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L"
      },
      "cwe": [
        "CWE-401"
      ],
      "url": "https://github.com/advisories/GHSA-cxrh-j4jr-qwg3"
    }
  },
  "muted": [],
  "metadata": {
    "vulnerabilities": {
      "info": 0,
      "low": 2,
      "moderate": 11,
      "high": 0,
      "critical": 0
    },
    "dependencies": 1874,
    "devDependencies": 0,
    "optionalDependencies": 0,
    "totalDependencies": 1874
  }
}
