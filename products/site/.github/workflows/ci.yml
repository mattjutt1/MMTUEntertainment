name: CI Pipeline

on:
  push:
    branches: [ main, feat/*, fix/* ]
  pull_request:
    branches: [ main ]

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint GitHub Actions workflows
      run: |
        curl -sSfL https://github.com/rhymond/actionlint/releases/latest/download/actionlint_1.7.7_linux_amd64.tar.gz | tar xzf -
        ./actionlint

    - name: Security scan with Semgrep
      run: |
        pip install semgrep
        semgrep --config=auto --error --json --output=semgrep-report.json .
        # Block on High/Critical findings
        semgrep --config=auto --severity=HIGH --severity=CRITICAL --error .

    - name: Vulnerability scan with Trivy
      uses: aquasecurity/trivy-action@0.26.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'json'
        output: 'trivy-report.json'
        exit-code: '1'
        severity: 'HIGH,CRITICAL'

    - name: Secrets detection with Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    - name: Build site
      run: npm run build

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run E2E tests
      run: npm test
      env:
        CI: true

    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-reports
        path: |
          playwright-report/
          test-results/
        retention-days: 30

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          semgrep-report.json
          trivy-report.json
        retention-days: 30

  deploy-preview:
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build site
      run: npm run build
      
    - name: Deploy preview to Cloudflare Pages
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy dist --project-name mmtu-site --compatibility-date 2024-01-01
        
    - name: Comment PR with preview URL
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo, number } = context.issue;
          const comment = `ðŸš€ Preview deployed to Cloudflare Pages
          
          Preview URL will be available at: https://mmtu-site.pages.dev
          
          âœ… Quality gates passed
          âœ… Security scans clean  
          âœ… E2E tests passing`;
          
          github.rest.issues.createComment({
            owner,
            repo,
            issue_number: number,
            body: comment
          });

  deploy-production:
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build site
      run: npm run build
      
    - name: Deploy to Cloudflare Pages
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy dist --project-name mmtu-site --compatibility-date 2024-01-01